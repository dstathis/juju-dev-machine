#!/usr/bin/env python3

import argparse
import os
import subprocess

def run(cmd, check=True, shell=False):
    if shell:
        return subprocess.run(cmd, check=check, shell=True)
    else:
        return subprocess.run(cmd.split(), check=check, shell=False)


def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--lma', action='store_true', help='clone lma repos and create lma model')
    parser.add_argument('--fix', action='store_true', help='Attempt to fix a broken setup'))
    parser.add_argument('--lxd', action='store_true', help='Set up a lxd cloud (Not repeatable)')
    return parser.parse_args()


def fix_k8s():
    run('juju unregister mk8s-localhost -y')
    run('sudo snap remove microk8s')
    setup_k8s()


def setup_lxd():
    run('sudo snap install lxd')
    run('sudo lxd init --auto')
    run('lxc network set lxdbr0 ipv6.address none')
    run('juju bootstrap localhost')


def setup_k8s():
    run('sudo snap install docker')
    run('sudo snap install microk8s --classic')
    run('sudo snap alias microk8s.kubectl kubectl')
    run('sudo microk8s status --wait-ready')
    run('sudo microk8s enable storage dns registry')
    run('sudo microk8s config | juju add-k8s mk8s --client', shell=True)
    run('juju bootstrap mk8s')
    run('sudo usermod -a -G microk8s $USER', shell=True)



def main():
    args = parse_args()

    if args.fix:
        fix_k8s()
        if args.lma:
            run('juju add-model lma')
        return

    run('sudo apt-get update')
    run('sudo apt-get -y dist-upgrade')
    run('sudo apt-get -y install make virtualenv')
    run('sudo snap install juju --classic')
    run('sudo snap install juju-wait --classic')

    if args.lxd:
        setup_lxd()
    setup_k8s()

    if args.lma:
        curdir = os.getcwd()
        try:
            os.chdir(os.environ['HOME'])
            run('git clone git@github.com:canonical/grafana-operator.git')
            run('git clone git@github.com:canonical/prometheus-operator.git')
            run('git clone git@github.com:dstathis/alertmanager-operator.git')
            run('juju add-model lma')
        finally:
            os.chdir(curdir)


if __name__ == '__main__':
    main()
