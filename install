#!/usr/bin/env python3

import argparse
import subprocess

def run(cmd, check=True, shell=False):
    if shell:
        return subprocess.run(cmd, check=check, shell=True)
    else:
        return subprocess.run(cmd.split(), check=check, shell=False)

def parse_args():
    parser = argparse.ArgumentParser()
    parser.add_argument('--kube', action='store_true',
                        help='Install microk8s and initialize it as a cloud')
    return parser.parse_args()

def main():
    args = parse_args()
    run('sudo apt-get update')
    run('sudo apt-get dist-upgrade')
    run('sudo apt-get install make virtualenv')
    run('sudo snap install juju --classic')
    run('sudo snap install juju-wait --classic')
    p = run('juju list-clouds | grep lxd', shell=True)
    if p.returncode != 0:
        run('sudo snap install lxd')
        run('lxd init --auto')
        run('juju bootstrap localhost')
    if args.kube:
        run('sudo snap install docker')
        run('sudo snap install microk8s --classic')
        run('sudo snap alias microk8s.kubectl kubectl')
        run('sudo microk8s status --wait-ready')
        run('sudo microk8s enable storage dns registry')
        run('sudo microk8s config | juju add-k8s mk8s --client', shell=True)
        run('juju bootstrap mk8s')
        run('sudo usermod -a -G microk8s $USER', shell=True)



if __name__ == '__main__':
    main()
